package nbt

import "testing"
import "bytes"
import "compress/gzip"
import "reflect"

func TestTestNbt(t *testing.T) {
	testGZippedFile(t, leveldat, "hello world", map[string]interface{}{
		"name": "Bananrama",
	})
}

func currentlyFailsTestBigTestNbt(t *testing.T) {
	// TODO: figure out why this fails.  it seems ok
	testGZippedFile(t, bigtestnbt, "Level", map[string]interface{}{
		"shortTest":  int16(32767),
		"longTest":   int64(9223372036854775807),
		"floatTest":  float32(0.49823147),
		"stringTest": "HELLO WORLD THIS IS A TEST STRING ÅÄÖ!",
		"intTest":    int32(2147483647),
		"nested compound test": map[string]interface{}{
			"ham": map[string]interface{}{
				"name":  "Hampus",
				"value": float32(0.75),
			},
			"egg": map[string]interface{}{
				"name":  "Eggbert",
				"value": float32(0.5),
			},
		},
		"listTest (long)": []int64{
			int64(11),
			int64(12),
			int64(13),
			int64(14),
			int64(15),
		},
		"byteTest": int8(127),
		"listTest (compound)": []interface{}{
			map[string]interface{}{
				"name":       "Compound tag #0",
				"created-on": int64(1264099775885),
			},
			map[string]interface{}{
				"name":       "Compound tag #1",
				"created-on": int64(1264099775885),
			},
		},
		"byteArrayTest (the first 1000 values of (n*n*255+n*7)%100, starting with n=0 (0, 62, 34, 16, 8, ...))": []byte{
			0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48},
		"doubleTest": float64(0.4931287132182315),
	})
}

func testGZippedFile(t *testing.T, nbtb []byte, expectedName string, expectedPayload map[string]interface{}) {
	gzbuf := bytes.NewBuffer(nbtb)
	buf, err := gzip.NewReader(gzbuf)
	if err != nil {
		t.Fatal(err)
	}
	defer buf.Close()

	tr := NewTagReader(buf)
	name, payload, err := tr.ReadTagCompound()
	if err != nil {
		t.Fatal(err)
	}
	if name != expectedName {
		t.Error("expected ", expectedName, ", got ", name)
	}
	if !reflect.DeepEqual(payload, expectedPayload) {
		t.Error("expected ", expectedPayload, ", got ", payload)
	}
}

var testnbt = []byte{
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xe3, 0x62,
	0xe0, 0xce, 0x48, 0xcd, 0xc9, 0xc9,
	0x57, 0x28, 0xcf, 0x2f, 0xca, 0x49,
	0xe1, 0x60, 0x60, 0xc9, 0x4b, 0xcc,
	0x4d, 0x65, 0xe0, 0x74, 0x4a, 0xcc,
	0x4b, 0xcc, 0x2b, 0x4a, 0xcc, 0x4d,
	0x64, 0x00, 0x00, 0x77, 0xda, 0x5c,
	0x3a, 0x21, 0x00, 0x00, 0x00}

var leveldat = []byte{
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xed, 0x9d,
	0xcb, 0x6e, 0xdc, 0x36, 0x14, 0x86,
	0xc9, 0x28, 0xad, 0x32, 0x46, 0x27,
	0x33, 0xe8, 0xae, 0x40, 0x17, 0x79,
	0x84, 0x3e, 0xc2, 0xe4, 0x06, 0x34,
	0x40, 0x0a, 0x04, 0x68, 0xba, 0x8f,
	0xd1, 0x0c, 0x5a, 0x23, 0x46, 0x62,
	0xc4, 0x6e, 0xd1, 0x76, 0xd5, 0x47,
	0xe8, 0x23, 0x75, 0xdb, 0xb7, 0xe9,
	0xaa, 0x5b, 0x77, 0x24, 0x59, 0x12,
	0xaf, 0x22, 0x25, 0x9e, 0x43, 0x7a,
	0xe2, 0xff, 0x5f, 0x04, 0xf6, 0xb8,
	0x47, 0x1f, 0x49, 0x89, 0xfc, 0x0f,
	0x2f, 0xa3, 0x9e, 0x08, 0x71, 0x22,
	0x3e, 0x7b, 0xb9, 0xff, 0x75, 0x7f,
	0x5e, 0x8b, 0xfb, 0xcf, 0x4e, 0xaf,
	0x4e, 0x85, 0xd8, 0x09, 0x08, 0x82,
	0x20, 0x08, 0x82, 0x20, 0x08, 0x82,
	0x20, 0x08, 0x82, 0x20, 0x08, 0x8a,
	0xd0, 0x45, 0xe9, 0x02, 0x40, 0x10,
	0xb4, 0x58, 0xa9, 0xfd, 0xf7, 0x4d,
	0x62, 0xfc, 0xab, 0xc4, 0x78, 0x08,
	0x82, 0x96, 0xeb, 0x4d, 0x62, 0x7c,
	0x6a, 0xff, 0xdd, 0x25, 0xc6, 0x7f,
	0x93, 0x18, 0x0f, 0x41, 0x77, 0x59,
	0xc7, 0xde, 0x7f, 0x1f, 0x15, 0xe6,
	0x43, 0x10, 0xb4, 0x5c, 0x8f, 0x12,
	0xe3, 0xb7, 0x85, 0xf9, 0xa9, 0xda,
	0x15, 0xe6, 0x43, 0xd0, 0x31, 0xeb,
	0xaf, 0xaf, 0xd2, 0xe2, 0x4b, 0x8f,
	0x1f, 0xa9, 0xf9, 0xc7, 0x2e, 0x31,
	0x1e, 0x82, 0xa0, 0x72, 0xda, 0x95,
	0x2e, 0x00, 0x04, 0x41, 0x10, 0x04,
	0x41, 0x10, 0x04, 0x41, 0x10, 0x04,
	0x41, 0x10, 0x04, 0x41, 0x9f, 0x9e,
	0x56, 0xe2, 0xc1, 0xf3, 0xf7, 0x57,
	0x67, 0x57, 0x67, 0xfb, 0x4b, 0xd9,
	0xfc, 0x7e, 0x5f, 0x9c, 0xbc, 0x3c,
	0xbd, 0xbc, 0xfa, 0xe1, 0xe2, 0xed,
	0xe9, 0xd5, 0xbe, 0xfd, 0x2f, 0xee,
	0x7d, 0xfd, 0x65, 0x25, 0xee, 0xff,
	0xf6, 0xea, 0xc3, 0xe5, 0xf5, 0xf5,
	0xf5, 0x7f, 0x87, 0x1f, 0xff, 0x38,
	0xfc, 0xd8, 0x85, 0x7e, 0xf1, 0xfa,
	0xec, 0x7c, 0xaf, 0x85, 0x4b, 0xb1,
	0x7d, 0xbd, 0xff, 0xf8, 0xf1, 0xf4,
	0xec, 0xfd, 0xab, 0x0f, 0x17, 0xbf,
	0x9c, 0x1f, 0xae, 0xf1, 0x56, 0xd6,
	0xe2, 0xc1, 0xf7, 0xef, 0x7e, 0x7f,
	0x79, 0xf6, 0xd3, 0xcf, 0x57, 0xe1,
	0x85, 0xce, 0x37, 0xff, 0x5c, 0x07,
	0x84, 0x78, 0xc4, 0x23, 0xfe, 0x53,
	0x8d, 0x17, 0x47, 0x1e, 0x5f, 0xba,
	0xfd, 0x10, 0x8f, 0xf8, 0x63, 0x8e,
	0x17, 0x7f, 0x27, 0xc6, 0x63, 0xfc,
	0x40, 0x3c, 0xe2, 0x8f, 0x36, 0x3e,
	0xb9, 0xff, 0x1f, 0xf9, 0xf8, 0x51,
	0xba, 0xfd, 0x11, 0x8f, 0xf8, 0x92,
	0xf1, 0x42, 0x24, 0xc6, 0xa3, 0xff,
	0x23, 0x1e, 0xf1, 0x47, 0x1b, 0x2f,
	0xc4, 0xbf, 0x89, 0xf1, 0x89, 0xfc,
	0xc2, 0xe3, 0x47, 0xe9, 0xf6, 0x47,
	0x3c, 0xe2, 0x4b, 0xc6, 0x8b, 0x60,
	0x07, 0x4e, 0x0c, 0x47, 0xff, 0x47,
	0x3c, 0xe2, 0x6f, 0x6d, 0x7c, 0xa3,
	0xc4, 0xf8, 0x44, 0x7e, 0x62, 0xf9,
	0x8f, 0xbc, 0xfd, 0x11, 0x8f, 0xf8,
	0x92, 0xf1, 0x8d, 0xa6, 0x67, 0x00,
	0x89, 0xe1, 0xb7, 0x3c, 0x7f, 0x28,
	0xdd, 0xfe, 0x88, 0x47, 0x7c, 0xc9,
	0x78, 0x91, 0xdc, 0x7f, 0x0b, 0xaf,
	0x1f, 0x1c, 0x79, 0xfb, 0x23, 0x1e,
	0xf1, 0x25, 0xe3, 0x8b, 0xf7, 0x5f,
	0xcc, 0xff, 0x11, 0x8f, 0xf8, 0x62,
	0xf1, 0xc7, 0xde, 0x7f, 0xd1, 0xff,
	0x11, 0x8f, 0xf8, 0xe5, 0xf1, 0xc7,
	0xde, 0x7f, 0xd1, 0xff, 0x11, 0x8f,
	0xf8, 0xe5, 0xf1, 0xc5, 0xfd, 0x1f,
	0xf9, 0x3f, 0xe2, 0x11, 0x5f, 0x2c,
	0xfe, 0xae, 0xcf, 0xff, 0x31, 0x7e,
	0x20, 0xfe, 0x2e, 0xc7, 0x8b, 0xd2,
	0xfb, 0x77, 0x18, 0x3f, 0x10, 0x8f,
	0x78, 0xc6, 0xf8, 0x5a, 0xac, 0xbe,
	0xdd, 0x37, 0x2f, 0x03, 0xf8, 0xee,
	0xf4, 0xa2, 0x79, 0x61, 0xc0, 0xae,
	0xd1, 0xe3, 0x27, 0xcf, 0x9e, 0x3f,
	0x7d, 0xdc, 0xfc, 0xf0, 0x74, 0xd7,
	0xe9, 0x49, 0xfb, 0xeb, 0x1d, 0x50,
	0x2d, 0x4e, 0x9e, 0x9c, 0x7f, 0xf8,
	0xf1, 0x5d, 0xe4, 0x0b, 0x12, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0x82, 0x20,
	0x08, 0x82, 0x20, 0x08, 0xca, 0xa1,
	0x5a, 0x7c, 0xde, 0xbe, 0x10, 0xe0,
	0x52, 0x88, 0x3f, 0x45, 0x2d, 0x6b,
	0xb9, 0x6e, 0x24, 0x5b, 0x35, 0x7f,
	0x97, 0x01, 0x55, 0x07, 0x75, 0xff,
	0xae, 0x56, 0xab, 0xe4, 0xc2, 0xc8,
	0xba, 0x2d, 0x80, 0x8c, 0xe7, 0xcb,
	0x06, 0xdf, 0x16, 0x80, 0x80, 0xdf,
	0x5c, 0x69, 0x3d, 0x93, 0x3f, 0x34,
	0x03, 0x45, 0xfd, 0x0f, 0x0d, 0x50,
	0x92, 0x2f, 0xbb, 0x06, 0xe8, 0x2f,
	0x5a, 0xa0, 0xfe, 0x6d, 0x03, 0x28,
	0xfc, 0x48, 0x3c, 0x21, 0x5f, 0x51,
	0x01, 0x7e, 0x2c, 0x8f, 0x89, 0x2f,
	0x97, 0x16, 0x80, 0xb0, 0xff, 0x2f,
	0x2d, 0x00, 0x09, 0xdf, 0xaf, 0xcd,
	0x26, 0x03, 0x7f, 0xb2, 0x00, 0x76,
	0x89, 0x94, 0x8f, 0x88, 0xfa, 0xff,
	0xac, 0xe6, 0x27, 0xe7, 0x37, 0xcf,
	0x9f, 0x51, 0x82, 0xed, 0x36, 0xae,
	0x2c, 0x1c, 0xfd, 0xdf, 0xe6, 0x77,
	0x6e, 0xc7, 0xc9, 0xb7, 0x0a, 0x20,
	0xd4, 0x41, 0xc8, 0xc7, 0x5f, 0xaf,
	0xc9, 0x9e, 0xbf, 0xb5, 0x66, 0x40,
	0x11, 0xed, 0xae, 0x18, 0x30, 0x01,
	0xbf, 0xae, 0x4b, 0xf2, 0x65, 0xc7,
	0x77, 0x35, 0xbd, 0xbf, 0x00, 0x7d,
	0x39, 0x88, 0xee, 0xff, 0x4c, 0xfe,
	0xd0, 0x0c, 0x44, 0xf9, 0xc7, 0xe1,
	0x09, 0xe8, 0x2f, 0x5a, 0x82, 0xaf,
	0xaa, 0x00, 0xbf, 0xb4, 0xff, 0xeb,
	0xe3, 0x5f, 0x34, 0x9e, 0x89, 0x3f,
	0x2a, 0x38, 0x0c, 0x33, 0xfb, 0x6f,
	0x26, 0xbe, 0x63, 0xfc, 0x8d, 0x14,
	0x97, 0xff, 0x64, 0xe6, 0xcf, 0xcc,
	0x00, 0x7a, 0xd1, 0xf9, 0x8f, 0xd9,
	0x02, 0x71, 0xfe, 0x4f, 0xc5, 0xb7,
	0x6b, 0x1f, 0xe7, 0xff, 0x84, 0xfe,
	0x3b, 0x29, 0x6e, 0xfe, 0xcd, 0xfc,
	0x7b, 0xed, 0x62, 0x04, 0x4a, 0xd4,
	0x8c, 0x40, 0x24, 0xf5, 0x9f, 0xc2,
	0xdb, 0x49, 0x38, 0x71, 0xfe, 0x11,
	0xb8, 0x03, 0x8e, 0x39, 0x00, 0xa9,
	0xff, 0x4b, 0xd3, 0x00, 0xa7, 0x1b,
	0x5f, 0x6f, 0x07, 0xf2, 0xf1, 0x57,
	0x14, 0xf0, 0x3f, 0xcd, 0xfe, 0xb2,
	0xf3, 0x4b, 0xd7, 0x5f, 0x1f, 0x7e,
	0x15, 0x7e, 0x68, 0x18, 0x64, 0xca,
	0x7f, 0x46, 0x7c, 0x2e, 0xff, 0xf7,
	0xf4, 0xbf, 0x3c, 0xfc, 0x85, 0xee,
	0x47, 0x57, 0xff, 0xa5, 0x09, 0x00,
	0x99, 0xff, 0x04, 0xfc, 0xcf, 0x8b,
	0xa7, 0xe1, 0x3b, 0xda, 0x3f, 0x2b,
	0xbf, 0xb8, 0xff, 0x86, 0x0a, 0xc0,
	0xcc, 0xef, 0xb2, 0xaf, 0x19, 0xee,
	0x4f, 0xed, 0xff, 0xa1, 0xfe, 0x67,
	0xfb, 0x2f, 0x29, 0x3f, 0xd8, 0xfd,
	0x99, 0xfd, 0x5f, 0xa6, 0xcc, 0x3f,
	0x68, 0xd6, 0x5f, 0x5e, 0xc4, 0x03,
	0x2d, 0x3c, 0x35, 0x7f, 0xd2, 0x7e,
	0x59, 0xf8, 0x7e, 0xff, 0x0d, 0xb6,
	0x06, 0x6b, 0xfe, 0xb1, 0xf5, 0x2d,
	0x3b, 0x2a, 0x05, 0xa0, 0x9f, 0xff,
	0x29, 0xf5, 0xcf, 0xc5, 0x37, 0xf2,
	0xdf, 0x00, 0x94, 0x9a, 0x2f, 0x97,
	0x6f, 0x40, 0x10, 0xae, 0xbf, 0x2d,
	0x10, 0xe5, 0xfc, 0xaf, 0x3c, 0x3f,
	0xb0, 0xd5, 0xc2, 0xc8, 0x8f, 0x30,
	0x60, 0x66, 0xfe, 0xf4, 0x03, 0xc0,
	0x3e, 0xff, 0x9f, 0xff, 0xfc, 0xf5,
	0x05, 0x3a, 0x94, 0xe0, 0x5e, 0x7a,
	0xfd, 0xe7, 0xd2, 0x47, 0x3e, 0x4d,
	0xfe, 0xd1, 0xe9, 0x45, 0xb4, 0x0b,
	0xf2, 0xf8, 0xff, 0x0c, 0xfc, 0x58,
	0x8c, 0x1c, 0xeb, 0x1f, 0x76, 0xbd,
	0x55, 0x7c, 0xce, 0xfc, 0xc3, 0xec,
	0x08, 0xd4, 0xfe, 0xd3, 0x18, 0xbe,
	0x62, 0xff, 0x76, 0xb7, 0xe3, 0xe0,
	0x8f, 0xdb, 0x9f, 0xdb, 0x8e, 0x6f,
	0xf9, 0xaf, 0x77, 0x64, 0x24, 0x1e,
	0xff, 0x7d, 0x7c, 0x6f, 0x01, 0x38,
	0xd6, 0x5f, 0x57, 0xb3, 0xd6, 0xbf,
	0x4a, 0xfa, 0x2f, 0xe1, 0xf3, 0x57,
	0x38, 0xff, 0x58, 0x2a, 0x4a, 0xfe,
	0x7c, 0xff, 0xa7, 0xdd, 0x7f, 0x9a,
	0xe0, 0x7b, 0xf3, 0xe0, 0xb2, 0xeb,
	0x0f, 0xe5, 0xef, 0x7f, 0xbb, 0x04,
	0x93, 0x9a, 0x00, 0x2c, 0x59, 0xff,
	0xa2, 0xcd, 0x3f, 0x3a, 0xfc, 0x1c,
	0xff, 0x25, 0xcd, 0x3f, 0x66, 0xf8,
	0xbf, 0xf1, 0x1c, 0xd0, 0xe4, 0x1f,
	0xc1, 0x5a, 0xaa, 0x3c, 0xe3, 0x77,
	0xda, 0xf1, 0x37, 0xb4, 0xef, 0x56,
	0xf1, 0xcc, 0xff, 0x47, 0xff, 0x9f,
	0xc7, 0x67, 0xca, 0x3f, 0x72, 0xcf,
	0xbf, 0xf5, 0xf9, 0xdf, 0x2a, 0xff,
	0xfc, 0x5f, 0x9b, 0x80, 0x94, 0xf6,
	0xff, 0xfc, 0xfc, 0x68, 0x1c, 0x5b,
	0xfd, 0x6f, 0x57, 0xfe, 0x11, 0x9f,
	0x09, 0x64, 0x3a, 0xff, 0xca, 0xec,
	0xff, 0xc1, 0x05, 0x60, 0x7e, 0x7e,
	0xa8, 0xa1, 0x3d, 0x5a, 0x53, 0x24,
	0x00, 0x09, 0xcf, 0x3f, 0x89, 0xff,
	0xfb, 0xab, 0x1f, 0x1c, 0xff, 0xe8,
	0xce, 0x3f, 0xf4, 0x57, 0x33, 0x2e,
	0x6e, 0xf9, 0x8f, 0xc5, 0xa7, 0x7c,
	0xfe, 0x43, 0x7c, 0xe3, 0x03, 0xf2,
	0xfd, 0xb7, 0x2a, 0xe0, 0xbf, 0x4c,
	0x7c, 0xa9, 0xf9, 0xef, 0x74, 0xfb,
	0x73, 0xf8, 0xbf, 0xf1, 0x00, 0x0a,
	0xe5, 0xf2, 0x72, 0x5a, 0x1c, 0xe3,
	0x6f, 0x09, 0xff, 0x3d, 0x2e, 0xfe,
	0xe8, 0x4f, 0x44, 0x7c, 0x2d, 0xf3,
	0x5f, 0xe5, 0xde, 0xff, 0x68, 0xf8,
	0x6a, 0x13, 0xcc, 0x98, 0x88, 0xb3,
	0xf8, 0xaf, 0xc6, 0x7f, 0xc8, 0xcf,
	0x4f, 0xda, 0x7f, 0xa5, 0x59, 0xff,
	0x5b, 0xaa, 0xd2, 0xf9, 0x5f, 0xf7,
	0xb5, 0xb1, 0x44, 0x0f, 0x56, 0x5a,
	0xbf, 0x92, 0x31, 0xa6, 0xab, 0xf3,
	0xd3, 0xf3, 0x0f, 0xdd, 0x7f, 0x15,
	0x7e, 0x4c, 0x51, 0x08, 0xf2, 0x0f,
	0x05, 0x3f, 0xcb, 0x7f, 0xe9, 0xd6,
	0xff, 0xbb, 0xfb, 0x3f, 0x97, 0x4f,
	0x7e, 0xfe, 0x27, 0xa2, 0xba, 0xca,
	0x07, 0x64, 0xe7, 0x7f, 0x7c, 0xb7,
	0xd6, 0xba, 0xff, 0x4c, 0xfc, 0x5b,
	0xb0, 0xfe, 0xac, 0xa8, 0x80, 0xff,
	0x68, 0xd7, 0x2c, 0xe0, 0xbf, 0x33,
	0xf7, 0x1f, 0xa8, 0xf9, 0xc5, 0xf7,
	0x3f, 0x7c, 0xeb, 0x3f, 0xf2, 0xe1,
	0xb4, 0xfd, 0xf2, 0xee, 0xbf, 0xb4,
	0x7d, 0x2d, 0x83, 0xff, 0xb7, 0x70,
	0xff, 0x19, 0xaf, 0x0c, 0xf5, 0xaf,
	0xf5, 0x6f, 0x75, 0xc6, 0xab, 0xf4,
	0xfa, 0xd3, 0x50, 0x8e, 0x14, 0x13,
	0x34, 0xe6, 0x9f, 0x5d, 0xb3, 0xb7,
	0x4f, 0x5e, 0x64, 0x2a, 0x90, 0x68,
	0xc1, 0xb5, 0x82, 0xaf, 0xd4, 0x21,
	0xde, 0xbf, 0xef, 0x42, 0x07, 0x17,
	0x4a, 0xfe, 0x17, 0xe4, 0x3b, 0x0a,
	0x44, 0xbe, 0xfe, 0x30, 0x83, 0x4f,
	0x3f, 0xff, 0x6f, 0xf3, 0xbf, 0x8d,
	0x07, 0xc7, 0xe7, 0xff, 0x3e, 0x03,
	0xce, 0xe5, 0xff, 0x4b, 0x8f, 0x5f,
	0x95, 0xe5, 0x73, 0x9d, 0x7f, 0x12,
	0x3a, 0x63, 0xf8, 0xd1, 0xd1, 0x19,
	0xe9, 0xe7, 0x3f, 0x9b, 0x4d, 0xeb,
	0x7f, 0xfd, 0x70, 0xac, 0x7e, 0x2d,
	0x8a, 0x8f, 0xaf, 0xd4, 0xfe, 0x86,
	0x3f, 0x56, 0x3f, 0x33, 0x5f, 0xf1,
	0xff, 0x96, 0x37, 0xfd, 0xad, 0x30,
	0xb2, 0xf9, 0xb7, 0xe3, 0xfe, 0xc7,
	0x8c, 0xbe, 0x84, 0xf7, 0x7f, 0x18,
	0x75, 0x94, 0xfa, 0x67, 0xe2, 0x6b,
	0x78, 0xe5, 0x00, 0x52, 0xb6, 0xfc,
	0xa3, 0x7f, 0xfe, 0xc3, 0x35, 0x76,
	0x7e, 0x4d, 0x2f, 0xdd, 0x7f, 0xeb,
	0xa1, 0xc5, 0xab, 0xc0, 0xfc, 0xdb,
	0xe6, 0xa7, 0x9f, 0x3f, 0x50, 0xaa,
	0xdf, 0xfb, 0xef, 0x4d, 0xfa, 0x61,
	0xac, 0x07, 0x38, 0xef, 0x00, 0xdd,
	0xf9, 0xc7, 0x4a, 0x29, 0xc0, 0xd0,
	0x1c, 0x7a, 0x7b, 0xb0, 0xac, 0xff,
	0x0f, 0x37, 0xe0, 0xc6, 0xff, 0x95,
	0x04, 0x40, 0x9a, 0x7c, 0xde, 0xf5,
	0x77, 0xa3, 0x8e, 0x99, 0xfc, 0x77,
	0x72, 0xff, 0x4b, 0xdd, 0x92, 0x30,
	0xab, 0xff, 0x89, 0xf8, 0xff, 0xe2,
	0xe3, 0xe7, 0x94, 0xf9, 0x97, 0x67,
	0x02, 0x94, 0xc9, 0xff, 0x07, 0xc7,
	0xef, 0x8b, 0x61, 0xfb, 0xbf, 0x6b,
	0x70, 0x24, 0x5a, 0xff, 0x52, 0x74,
	0xf0, 0xff, 0xd5, 0x6a, 0x2c, 0x88,
	0xce, 0x77, 0x1c, 0x47, 0xe5, 0x98,
	0xff, 0xeb, 0xf7, 0x98, 0xbf, 0xfe,
	0x9e, 0xf5, 0x9f, 0x16, 0x98, 0xe3,
	0xfe, 0x4b, 0xe7, 0xf9, 0x8f, 0xca,
	0xd5, 0xe0, 0x3c, 0x7c, 0xed, 0x09,
	0x54, 0xf9, 0x01, 0x3c, 0x75, 0xfe,
	0x77, 0x20, 0x06, 0xbe, 0x79, 0x69,
	0xfb, 0xff, 0x86, 0xe4, 0xfc, 0xdf,
	0x68, 0xc0, 0x2a, 0xdf, 0x6e, 0x00,
	0x8b, 0x4f, 0x78, 0xfe, 0x6f, 0x30,
	0x60, 0x9d, 0x6f, 0x8e, 0xf9, 0xd6,
	0x1d, 0x20, 0xe7, 0x6b, 0xfe, 0x6b,
	0x2c, 0x08, 0x48, 0x0b, 0x4f, 0xe9,
	0x3f, 0x95, 0xfd, 0xd4, 0x5b, 0xf9,
	0x88, 0x89, 0x27, 0xde, 0x7f, 0x32,
	0x21, 0x5b, 0x6f, 0xfe, 0xc3, 0xf3,
	0xfd, 0x5f, 0xb3, 0x8e, 0xb6, 0xff,
	0xf7, 0x9f, 0x10, 0xfa, 0xff, 0x3c,
	0x03, 0xa6, 0xe6, 0xcf, 0x82, 0x8f,
	0xa2, 0xcc, 0x7f, 0xbc, 0x65, 0x50,
	0xc7, 0x7f, 0xfb, 0x6f, 0x84, 0xdf,
	0x7f, 0xf6, 0xd6, 0x91, 0xdf, 0x7f,
	0xcd, 0x02, 0xac, 0x5c, 0x7c, 0xa7,
	0x1d, 0xf1, 0x9e, 0xff, 0xae, 0x32,
	0xf1, 0xcd, 0xf7, 0x9f, 0x28, 0xed,
	0x9d, 0x23, 0xff, 0x30, 0xde, 0x3f,
	0xa4, 0xf9, 0x7f, 0x16, 0xbe, 0x71,
	0x51, 0x2d, 0xff, 0x98, 0x5c, 0x7f,
	0xa1, 0x9e, 0x7f, 0x2c, 0xf0, 0xff,
	0x74, 0xfb, 0xd7, 0xd7, 0xff, 0x03,
	0x05, 0xe0, 0xf1, 0xdf, 0x3e, 0x01,
	0x73, 0xce, 0xf7, 0x27, 0xfd, 0x9f,
	0xd4, 0x7f, 0x37, 0xb2, 0xb2, 0x1f,
	0x33, 0x6b, 0x3e, 0xce, 0xc7, 0xb7,
	0x78, 0x36, 0x9f, 0xc7, 0xff, 0x7d,
	0xf3, 0xff, 0x00, 0x9f, 0x63, 0xfe,
	0xdf, 0xe0, 0xf4, 0xa9, 0xa8, 0xd5,
	0xe8, 0xfd, 0x6b, 0x71, 0x78, 0xe6,
	0xdf, 0x0d, 0x5f, 0x4e, 0x8a, 0x81,
	0xef, 0x74, 0x80, 0xd0, 0x96, 0x24,
	0xf3, 0xfb, 0x57, 0xc2, 0x5b, 0xa2,
	0x79, 0xf3, 0x0f, 0x46, 0xff, 0x89,
	0xe1, 0x73, 0xfa, 0xef, 0x14, 0x3e,
	0x4b, 0xfe, 0xe1, 0xd9, 0xff, 0xaf,
	0xa6, 0xf9, 0xbc, 0xcf, 0x5f, 0xd8,
	0xff, 0x79, 0xf3, 0x7f, 0x93, 0x6f,
	0x8b, 0x2c, 0xff, 0x55, 0x98, 0x81,
	0x77, 0x7e, 0xd9, 0xfe, 0x47, 0x39,
	0xff, 0x0d, 0xf2, 0xcd, 0xe6, 0xa8,
	0x88, 0xde, 0x7f, 0xa3, 0xdc, 0x00,
	0x0b, 0x6f, 0x2c, 0x39, 0x73, 0xf8,
	0xbf, 0x36, 0x00, 0x4f, 0xad, 0x79,
	0xbb, 0xd2, 0x1f, 0xe2, 0xfe, 0x3f,
	0x2b, 0xff, 0xa0, 0x3f, 0x7f, 0x6b,
	0xf5, 0x72, 0x7e, 0x7e, 0x6d, 0xf2,
	0x0d, 0xfb, 0x37, 0xa9, 0xdb, 0x71,
	0x01, 0x80, 0x27, 0xff, 0xc9, 0xef,
	0xff, 0xdd, 0x65, 0xdd, 0x6d, 0xec,
	0x15, 0xd9, 0xfb, 0xdf, 0xbc, 0x09,
	0x40, 0xb0, 0x00, 0xac, 0xf3, 0x5f,
	0x93, 0xcf, 0x37, 0xff, 0x8b, 0x5a,
	0x81, 0x61, 0x9d, 0xff, 0x4e, 0xb4,
	0xf1, 0x88, 0x67, 0xf3, 0x5f, 0x77,
	0x01, 0xf2, 0xf9, 0xbf, 0x3f, 0x01,
	0xd0, 0xf9, 0x56, 0xdb, 0xe4, 0xf4,
	0xff, 0x9e, 0x3f, 0x16, 0x83, 0xe5,
	0xfd, 0x8b, 0xf3, 0xa6, 0xdf, 0x44,
	0xfb, 0xdf, 0xaa, 0xff, 0xce, 0xf1,
	0x7f, 0x92, 0xf9, 0xff, 0x8c, 0xed,
	0x4f, 0x16, 0x7e, 0xe3, 0xbf, 0x53,
	0x67, 0xd0, 0x75, 0xff, 0x67, 0xc8,
	0x3f, 0x94, 0x07, 0xc0, 0x6e, 0x7d,
	0xfd, 0xb9, 0x77, 0xa4, 0x1f, 0xa4,
	0xf5, 0xdf, 0x4e, 0xe6, 0x1f, 0x8e,
	0xc6, 0x61, 0x3d, 0x7f, 0xe0, 0xe1,
	0x8f, 0x8d, 0x44, 0x39, 0xfe, 0x76,
	0xb6, 0xee, 0xda, 0x63, 0x31, 0x6b,
	0x4d, 0x9d, 0x7f, 0xf4, 0x57, 0xdd,
	0x6a, 0xb8, 0xf0, 0x0b, 0x41, 0x59,
	0xf7, 0x1f, 0x22, 0xde, 0x47, 0x5e,
	0x9a, 0xcf, 0xba, 0xfe, 0xee, 0x18,
	0x69, 0xd8, 0xf6, 0xdf, 0x5d, 0x25,
	0x88, 0xe0, 0xb3, 0x9e, 0xbf, 0xbd,
	0xe1, 0x4f, 0x6d, 0xbf, 0xf0, 0x9e,
	0x7f, 0x59, 0xdb, 0xf9, 0x07, 0x13,
	0xdf, 0x93, 0x80, 0x78, 0xf2, 0x0f,
	0xcd, 0x0e, 0x64, 0xe6, 0xfd, 0x47,
	0x47, 0xa7, 0xa0, 0xd8, 0xff, 0x57,
	0x2e, 0x37, 0xdb, 0xff, 0x29, 0xf6,
	0xff, 0x63, 0xeb, 0xcf, 0xe4, 0xff,
	0x93, 0x78, 0xf6, 0xf5, 0x07, 0xe5,
	0x72, 0x8e, 0xc6, 0x37, 0xfc, 0x9f,
	0x63, 0xfd, 0x41, 0x7d, 0xff, 0x4f,
	0x20, 0xff, 0xb0, 0xfe, 0x48, 0x3b,
	0xfe, 0x34, 0xf8, 0x4a, 0xaf, 0x69,
	0x06, 0x7e, 0x5d, 0x2b, 0x75, 0xaf,
	0x06, 0xfe, 0x50, 0x00, 0x93, 0x4a,
	0x9e, 0x7f, 0xd4, 0x63, 0xfe, 0xd1,
	0x2b, 0xe6, 0xff, 0x07, 0xc2, 0x39,
	0xff, 0x5e, 0x47, 0x14, 0x80, 0x70,
	0xfe, 0x63, 0x15, 0x21, 0x86, 0x4f,
	0xe7, 0xbf, 0xcb, 0xea, 0x4f, 0xc6,
	0x77, 0x0d, 0x40, 0x8e, 0xa1, 0x86,
	0x89, 0xef, 0x1e, 0xff, 0x1c, 0x7c,
	0x57, 0x3f, 0x64, 0xf3, 0xbf, 0x66,
	0x75, 0xcb, 0xc0, 0x73, 0xf1, 0xdd,
	0xd3, 0xbf, 0x36, 0xff, 0x08, 0xec,
	0x3f, 0x51, 0xd5, 0xdf, 0x71, 0xe1,
	0x78, 0xa5, 0x5a, 0xf0, 0x0c, 0x3c,
	0xcf, 0xfa, 0x43, 0xfc, 0xeb, 0x0f,
	0x1c, 0x7d, 0x92, 0x66, 0xfd, 0x23,
	0xa1, 0xfe, 0xdc, 0xef, 0x7f, 0x98,
	0xb2, 0x7f, 0xa2, 0xf5, 0x87, 0x89,
	0xe5, 0x87, 0x69, 0xff, 0xa5, 0xca,
	0x3f, 0x1c, 0xfc, 0x7c, 0xfe, 0x2f,
	0xc7, 0x05, 0x78, 0x15, 0xef, 0xf7,
	0x7f, 0x62, 0x7e, 0xdf, 0xff, 0x67,
	0xfb, 0x3f, 0xe7, 0xfc, 0x37, 0xa3,
	0xff, 0x39, 0xfb, 0x5f, 0x4e, 0xbe,
	0x74, 0xf4, 0xbf, 0xac, 0xf5, 0x8f,
	0xf2, 0xdf, 0xdb, 0xc8, 0xe7, 0xf4,
	0x3f, 0x7b, 0xaa, 0xc3, 0xc6, 0x57,
	0x2f, 0x38, 0xbc, 0x85, 0x3e, 0x1b,
	0x5f, 0x88, 0xff, 0x01, 0xae, 0x88,
	0xe3, 0xe6, 0xb8, 0x41, 0x01, 0x00,
}

var bigtestnbt = []byte{
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xed, 0x54,
	0xcf, 0x4f, 0x1a, 0x41, 0x14, 0x7e,
	0xc2, 0x02, 0xcb, 0x96, 0x82, 0xb1,
	0xc4, 0x10, 0x63, 0xcc, 0xab, 0xb5,
	0x84, 0xa5, 0xdb, 0xcd, 0x42, 0x11,
	0x89, 0xb1, 0x88, 0x16, 0x2c, 0x9a,
	0x0d, 0x1a, 0xd8, 0xa8, 0x31, 0x86,
	0xb8, 0x2b, 0xc3, 0x82, 0x2e, 0xbb,
	0x66, 0x77, 0xb0, 0xf1, 0xd4, 0x4b,
	0x7b, 0x6c, 0x7a, 0xeb, 0x3f, 0xd3,
	0x23, 0x7f, 0x43, 0xcf, 0xbd, 0xf6,
	0xbf, 0xa0, 0xc3, 0x2f, 0x7b, 0x69,
	0xcf, 0xbd, 0xf0, 0x32, 0xc9, 0xf7,
	0xe6, 0xbd, 0x6f, 0xe6, 0x7b, 0x6f,
	0x26, 0x79, 0x02, 0x04, 0x54, 0x72,
	0x4f, 0x2c, 0x0e, 0x78, 0xcb, 0xb1,
	0x4d, 0x8d, 0x78, 0xf4, 0xe3, 0x70,
	0x62, 0x3e, 0x08, 0x7b, 0x1d, 0xc7,
	0xa5, 0x93, 0x18, 0x0f, 0x82, 0x47,
	0xdd, 0xee, 0x84, 0x02, 0x62, 0xb5,
	0xa2, 0xaa, 0xc7, 0x78, 0x76, 0x5c,
	0x57, 0xcb, 0xa8, 0x55, 0x0f, 0x1b,
	0xc8, 0xd6, 0x1e, 0x6a, 0x95, 0x86,
	0x86, 0x0d, 0xad, 0x7e, 0x58, 0x7b,
	0x8f, 0x83, 0xcf, 0x83, 0x4f, 0x83,
	0x6f, 0xcf, 0x03, 0x10, 0x6e, 0x5b,
	0x8e, 0x3e, 0xbe, 0xa5, 0x38, 0x4c,
	0x64, 0xfd, 0x10, 0xea, 0xda, 0x74,
	0xa6, 0x23, 0x40, 0xdc, 0x66, 0x2e,
	0x69, 0xe1, 0xb5, 0xd3, 0xbb, 0x73,
	0xfa, 0x76, 0x0b, 0x29, 0xdb, 0x0b,
	0xe0, 0xef, 0xe8, 0x3d, 0x1e, 0x38,
	0x5b, 0xef, 0x11, 0x08, 0x56, 0xf5,
	0xde, 0x5d, 0xdf, 0x0b, 0x40, 0xe0,
	0x5e, 0xb7, 0xfa, 0x64, 0xb7, 0x04,
	0x00, 0x8c, 0x41, 0x4c, 0x73, 0xc6,
	0x08, 0x55, 0x4c, 0xd3, 0x20, 0x2e,
	0x7d, 0xa4, 0xc0, 0xc8, 0xc2, 0x10,
	0xb3, 0xba, 0xde, 0x58, 0x0b, 0x53,
	0xa3, 0xee, 0x44, 0x8e, 0x45, 0x03,
	0x30, 0xb1, 0x27, 0x53, 0x8c, 0x4c,
	0xf1, 0xe9, 0x14, 0xa3, 0x53, 0x8c,
	0x85, 0xe1, 0xd9, 0x9f, 0xe3, 0xb3,
	0xf2, 0x44, 0x81, 0xa5, 0x7c, 0x33,
	0xdd, 0xd8, 0xbb, 0xc7, 0xaa, 0x75,
	0x13, 0x5f, 0x28, 0x1c, 0x08, 0xd7,
	0x2e, 0xd1, 0x59, 0x3f, 0xaf, 0x1d,
	0x1b, 0x60, 0x21, 0x59, 0xdf, 0xfa,
	0xf1, 0x05, 0xfe, 0xc1, 0xce, 0xfc,
	0x9d, 0xbd, 0x00, 0xbc, 0xf1, 0x40,
	0xc9, 0xf8, 0x85, 0x42, 0x40, 0x46,
	0xfe, 0x9e, 0xeb, 0xea, 0x0f, 0x93,
	0x3a, 0x68, 0x87, 0x60, 0xbb, 0xeb,
	0x32, 0x37, 0xa3, 0x28, 0x0a, 0x8e,
	0xbb, 0xf5, 0xd0, 0x69, 0x63, 0xca,
	0x4e, 0xdb, 0xe9, 0xec, 0xe6, 0xe6,
	0x2b, 0x3b, 0xbd, 0x25, 0xbe, 0x64,
	0x49, 0x09, 0x3d, 0xaa, 0xbb, 0x94,
	0xfd, 0x18, 0x7e, 0xe8, 0xd2, 0x0e,
	0xda, 0x6f, 0x15, 0x4c, 0xb1, 0x68,
	0x3e, 0x2b, 0xe1, 0x9b, 0x9c, 0x84,
	0x99, 0xbc, 0x84, 0x05, 0x09, 0x65,
	0x59, 0x16, 0x45, 0x00, 0xff, 0x2f,
	0x28, 0xae, 0x2f, 0xf2, 0xc2, 0xb2,
	0xa4, 0x2e, 0x1d, 0x20, 0x77, 0x5a,
	0x3b, 0xb9, 0x8c, 0xca, 0xe7, 0x29,
	0xdf, 0x51, 0x41, 0xc9, 0x16, 0xb5,
	0xc5, 0x6d, 0xa1, 0x2a, 0xad, 0x2c,
	0xc5, 0x31, 0x7f, 0xba, 0x7a, 0x92,
	0x8e, 0x5e, 0x9d, 0x5f, 0xf8, 0x12,
	0x05, 0x23, 0x1b, 0xd1, 0xf6, 0xb7,
	0x77, 0xaa, 0xcd, 0x95, 0x72, 0xbc,
	0x9e, 0xdf, 0x58, 0x5d, 0x4b, 0x97,
	0xae, 0x92, 0x17, 0xb9, 0x44, 0xd0,
	0x80, 0xc8, 0xfa, 0x3e, 0xbf, 0xb3,
	0xdc, 0x54, 0xcb, 0x07, 0x75, 0x6e,
	0xa3, 0xb6, 0x76, 0x59, 0x92, 0x93,
	0xa9, 0xdc, 0x51, 0x50, 0x99, 0x6b,
	0xcc, 0x35, 0xe6, 0x1a, 0xff, 0x57,
	0x23, 0x08, 0x42, 0xcb, 0xe9, 0x1b,
	0xd6, 0x78, 0xc2, 0xec, 0xfe, 0xfc,
	0x7a, 0xfb, 0x7d, 0x78, 0xd3, 0x84,
	0xdf, 0xd4, 0xf2, 0xa4, 0xfb, 0x08,
	0x06, 0x00, 0x00}
